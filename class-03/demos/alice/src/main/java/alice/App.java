/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package alice;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.HashMap;
import java.util.Scanner;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

//    I/O : Input/Output File I/O is about reading and writing files
//    What can go wrong: does not exist, path is wrong, permissions,
//    not enough memory, incompatible types


    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        readFile("src/main/resources/alice.txt");
    }

    public static void readFile(String stringFilePath){
//        Goal go get the file
//        File variable to load an instance of a File class
        File aliceFile = new File(stringFilePath);
//        Scanner will allow us to scan the file
        Scanner aliceScanner;
        try {
             aliceScanner = new Scanner(aliceFile);
        } catch(FileNotFoundException exception){
//            System.out.println(exception);
            System.out.println("So sorry we messed up, we will fix this with our newest hotfix patch");
            return;
        }
//        We check to make sure there is a next line to read and then read each line
//        while(aliceScanner.hasNextLine()){
//            System.out.println(aliceScanner.nextLine());
//        }
//        Set up a hashmap of characters
//        iterate and when we find a match, add them to the hashmap
        HashMap<String, Integer> peeps = new HashMap<>();
        peeps.put("Alice", 0);
        peeps.put("Hatter", 0);
        peeps.put("Cheshire", 0);
        peeps.put("Rabbit", 0);
        peeps.put("Queen", 0);
        peeps.put("Tweedle-Dee", 0);
        peeps.put("TweedleDum", 0);
        peeps.put("Caterpillar", 0);

        while(aliceScanner.hasNext()){
            String word = aliceScanner.next(); // Gutenberg
            if(peeps.containsKey(word)){
//                get the current count, add 1, `put` it back
                int count = peeps.get(word);
                count++;
                peeps.put(word, count);
            }
        }
        System.out.println(peeps);
    }
}
